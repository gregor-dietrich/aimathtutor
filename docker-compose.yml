services:
  aimathtutor:
    image: gregordietrich/aimathtutor:1.1.0
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      quarkus.datasource.jdbc.url: jdbc:postgresql://postgres:5432/${SQL_DATABASE:-aimathtutor}
      quarkus.datasource.username: ${SQL_USERNAME:-aimathtutor}
      quarkus.datasource.password: ${SQL_PASSWORD:-changeit}

      # Google Gemini config
      ai.tutor.provider: gemini
      gemini.model: gemini-2.5-flash-lite
      gemini.api.key: ${GEMINI_API_KEY}

      # OpenAI (ChatGPT) config
      # ai.tutor.provider: openai
      # openai.model: gpt-4o-mini
      # openai.api.key: ${OPENAI_API_KEY}
      # openai.organization-id: ${OPENAI_ORG_ID}

      # Ollama config
      # ai.tutor.provider: ollama
      # ollama.model: llama3.1:8b
      # ollama.api.url: http://localhost:11434
    ports:
      - "80:9001"
    volumes:
      - aimathtutor_logs:/deployments/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://aimathtutor:9001 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:18.0-alpine3.22
    restart: unless-stopped
    command: ["postgres", "-c", "max_connections=200"]
    environment:
      POSTGRES_USER: ${SQL_USERNAME:-aimathtutor}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-changeit}
      POSTGRES_DB: ${SQL_DATABASE:-aimathtutor}
      POSTGRES_PORT: 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_USERNAME:-aimathtutor} -d ${SQL_DATABASE:-aimathtutor}"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  pgadmin:
    image: dpage/pgadmin4:9.9.0
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-changeit}
    ports:
      - "42069:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://pgadmin/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  aimathtutor_logs:
  pgadmin_data:
  postgres_data:
